{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEgBC,SAASC,cAAc,wBACxBD,SAASC,cAAc,uBACrBD,SAASC,cAAc,yBAQxC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAhBAJ,SAASC,cAAc,SAC/BW,iBAAiB,UAmBtB,SAAyBC,GACvBA,EAAMC,iBACN,MACEC,UAAYX,MAAAY,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cACV,IAAIC,EAAUC,OAAOL,EAAMM,OACvBC,EAASF,OAAOJ,EAAKK,OACrBE,EAAWH,OAAOH,EAAOI,OAE7B,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAUC,GAAK,EAClCvB,EAAcuB,EAAGL,GACdM,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBuB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqB1B,QAAiBC,MAAU,IAGnD0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBuB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoB5B,QAAeC,MAAU,IAGnDgB,GAAWG,EAEbV,EAAMM,cAAca,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayEl = document.querySelector('.form [name=\"delay\"]');\nconst stepEl = document.querySelector('.form [name=\"step\"]');\nconst amountEl = document.querySelector('.form [name=\"amount\"]');\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onCreatePromise);\n// console.log(btnSubmit);\n// console.log(delayEl);\n// console.log(stepEl);\n// console.log(amountEl);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onCreatePromise(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  let delayEl = Number(delay.value);\n  let stepEl = Number(step.value);\n  let amountEl = Number(amount.value);\n\n  for (let i = 1; i <= amountEl; i += 1) {\n    createPromise(i, delayEl)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayEl += stepEl;\n  }\n  event.currentTarget.reset();\n}\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","delayEl1","Number","value","stepEl1","amountEl1","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.e5b372f6.js.map"}