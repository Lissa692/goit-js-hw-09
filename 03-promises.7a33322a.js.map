{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEgBC,SAASC,cAAc,wBACxBD,SAASC,cAAc,uBACrBD,SAASC,cAAc,yBAQxC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAhBMJ,SAASC,cAAc,SAC/BW,iBAAiB,UAmBtB,SAAyBC,GACvBA,EAAMC,iBAQN,IAPA,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALX,MAAOe,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAEvBC,EAAUC,OAAOJ,EAAMK,OACvBC,EAASF,OAAOH,EAAKI,OACrBE,EAAWH,OAAOF,EAAOG,OAEpBG,EAAI,EAAGA,GAAKD,EAAUC,GAAK,EAClCxB,EAAcwB,EAAGL,GACdM,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjByB,EAAA/B,GAASgC,OAAOC,QACd,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAGjD6B,OAAM,SAAAL,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClByB,EAAA/B,GAASgC,OAAOI,QACd,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAGjDiB,GAAWG,EAEbX,EAAMG,cAAcmB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayEl = document.querySelector('.form [name=\"delay\"]');\nconst stepEl = document.querySelector('.form [name=\"step\"]');\nconst amountEl = document.querySelector('.form [name=\"amount\"]');\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onCreatePromise);\n// console.log(btnSubmit);\n// console.log(delayEl);\n// console.log(stepEl);\n// console.log(amountEl);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onCreatePromise(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  let delayEl = Number(delay.value);\n  let stepEl = Number(step.value);\n  let amountEl = Number(amount.value);\n\n  for (let i = 1; i <= amountEl; i += 1) {\n    createPromise(i, delayEl)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayEl += stepEl;\n  }\n  event.currentTarget.reset();\n}\n"],"names":["$6JpON","parcelRequire","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","delayEl1","Number","value","stepEl1","amountEl1","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.7a33322a.js.map"}